# BankEaseAI 项目规则

## 项目概述
这是一个现代化的银行对账单AI处理应用，采用React + Next.js + FastAPI架构，可以将PDF银行对账单转换为Excel/CSV格式。

## 技术栈
- **前端**: React + Next.js + TypeScript
- **后端**: FastAPI + Python + SQLite
- **部署**: Vercel (前端) + Railway/Heroku (后端)

## 启动方式

### 现代化前端（推荐）
```bash
cd frontend && npm run dev
```

### 后端API服务
```bash
./start_api.sh
```

### 传统UI（Streamlit）
```bash
./start_production.sh
```

### 完整系统
```bash
# 终端1：启动后端
./start_api.sh

# 终端2：启动前端
cd frontend && npm run dev
```

## 项目结构
- `frontend/` - React + Next.js 前端应用
- `api/main.py` - FastAPI 后端服务
- `script/main.py` - 传统Streamlit UI（保留）
- `script/controllers/` - 业务控制器
- `script/utils/` - 工具函数

## 环境变量
- `OPENAI_API_KEY` - OpenAI API密钥（必需）
- `NEXT_PUBLIC_API_URL` - 前端API地址
- `JWT_SECRET_KEY` - JWT密钥
- `DATABASE_URL` - 数据库连接

## 功能特性
- 用户认证系统（注册/登录）
- PDF银行对账单解析
- AI智能文本处理
- 数据格式转换（Excel/CSV）
- 使用量限制和权限控制
- 现代化响应式UI
- 移动端支持

## 数据库
- SQLite数据库：`bankeaseai.db`
- WAL模式，支持并发访问
- bcrypt密码哈希
- 角色权限管理（管理员/普通用户）

## 访问地址
- 现代化前端：http://localhost:3000
- 后端API：http://localhost:8000
- 传统UI：http://localhost:8501

## AI助手指南
当用户打开这个项目时，AI应该：
1. 检查Node.js和Python环境
2. 提供启动命令选项（前端、后端、或传统UI）
3. 根据用户需求选择开发或生产环境
4. 提供访问URL
5. 解释现代化架构特性
